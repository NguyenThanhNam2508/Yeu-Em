<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gửi người anh yêu nhất ❤️</title>
    <style>
        body {
            /* Hình nền màu tối lãng mạn */
            background-color: #0d0d1a; 
            color: #ffccff; /* Màu chữ sáng */
            font-family: 'Verdana', sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            overflow: hidden; 
            position: relative; 
        }

        /* -------------------------- */
        /* CSS cho trái tim BAN ĐẦU (có thể click) */
        /* -------------------------- */
        #initial-heart {
            position: absolute;
            width: 150px; 
            height: 150px;
            background: linear-gradient(45deg, #ff66cc, #ff33ff); 
            box-shadow: 0 0 25px rgba(255, 51, 255, 0.7); 
            transform: rotate(-45deg);
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 1.2em;
            font-weight: bold;
            color: white;
            text-align: center;
            line-height: 1.3;
            z-index: 20; 
            transition: transform 0.5s ease-out, opacity 0.5s ease-out; 
        }

        #initial-heart::before,
        #initial-heart::after {
            content: "";
            position: absolute;
            width: 100%; 
            height: 100%;
            border-radius: 50%;
            background: inherit; 
        }
        #initial-heart::before { top: -50%; left: 0; }
        #initial-heart::after { left: 50%; top: 0; }

        /* Chữ bên trong trái tim */
        #initial-heart span {
            position: relative;
            z-index: 1; 
            transform: rotate(45deg); 
            padding: 10px;
        }

        /* Khi trái tim ban đầu ẩn đi */
        #initial-heart.hide {
            opacity: 0;
            transform: scale(0.1) rotate(-45deg);
            pointer-events: none; 
        }

        /* -------------------------- */
        /* CSS CHO HIỆU ỨNG PHÁO TIM BÙNG NỔ (MỚI) */
        /* -------------------------- */
        .burst-particle {
            position: absolute;
            width: 15px; /* Kích thước của trái tim nhỏ bắn ra */
            height: 15px;
            background: linear-gradient(45deg, #ff66cc, #ff33ff); /* Màu trái tim */
            box-shadow: 0 0 8px rgba(255, 102, 204, 0.7); /* Phát sáng nhẹ */
            transform: rotate(-45deg); /* Để có hình trái tim */
            z-index: 15;
            opacity: 1;
            animation: burstMove 0.8s ease-out forwards; 
        }
        .burst-particle::before,
        .burst-particle::after {
            content: "";
            position: absolute;
            width: 100%; 
            height: 100%;
            border-radius: 50%;
            background: inherit; 
        }
        .burst-particle::before { top: -50%; left: 0; }
        .burst-particle::after { left: 50%; top: 0; }

        @keyframes burstMove {
            to {
                opacity: 0;
                transform: translate(var(--endX), var(--endY)) scale(0.2) rotate(calc(-45deg + 360deg)); /* Xoay khi bay ra */
            }
        }
        
        /* -------------------------- */
        /* CSS cho nội dung lời nhắn & Trái tim rơi (Giữ nguyên) */
        /* -------------------------- */
        .container {
            text-align: center;
            background-color: rgba(0, 0, 0, 0.7); 
            padding: 40px 60px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(255, 0, 100, 0.5); 
            max-width: 80%;
            z-index: 10; 
            opacity: 0; 
            transform: translateY(20px); 
            transition: opacity 1.5s ease-out, transform 1.5s ease-out; 
        }

        .container.show {
            opacity: 1;
            transform: translateY(0);
        }
        
        h1 { color: #ff99ff; font-size: 3em; margin-bottom: 20px; text-shadow: 0 0 10px #ff33ff; }
        p { font-size: 1.5em; line-height: 1.6; margin-bottom: 30px; }
        .signature { font-style: italic; font-size: 1.2em; color: #ff66cc; border-top: 1px dashed #ff66cc; padding-top: 10px; margin-top: 20px; }

        /* CSS cho hiệu ứng TRÁI TIM RƠI */
        .heart-particle { 
            position: absolute;
            width: var(--heart-size); 
            height: var(--heart-size);
            background: linear-gradient(45deg, #ff66cc, #ff33ff); 
            box-shadow: 0 0 10px #ff33ff; 
            transform: rotate(-45deg);
            z-index: 1; 
            opacity: 0; 
        }

        .heart-particle::before, .heart-particle::after {
            content: ""; position: absolute; width: 100%; height: 100%; border-radius: 50%; background: inherit; 
        }
        .heart-particle::before { top: -50%; left: 0; }
        .heart-particle::after { left: 50%; top: 0; }

        /* Keyframes Trái tim rơi */
        @keyframes fall {
            0% { transform: translateY(-10vh) rotate(-45deg); opacity: 0.5; }
            100% { transform: translateY(100vh) rotate(315deg); opacity: 0; }
        }
        @keyframes sway {
            0% { transform: translateX(0px) rotate(-45deg); }
            50% { transform: translateX(40px) rotate(-50deg); } 
            100% { transform: translateX(0px) rotate(-45deg); }
        }
        @keyframes pulse {
            0% { transform: scale(1) rotate(-45deg); opacity: 0.8; }
            50% { transform: scale(1.1) rotate(-45deg); opacity: 1; }
            100% { transform: scale(1) rotate(-45deg); opacity: 0.8; }
        }
    </style>
</head>
<body>

    <div id="initial-heart">
        <span>Nhấn vào đây nè iuu ! ❤️</span>
    </div>

    <div class="container">
        <h1>Gửi Em May Mắn Của Anh!</h1>

        <p>
            "Em à, hôm nay là 20/10 anh chúc em cô gái của anh sẽ luôn luôn xinh đẹp, luôn vui vẻ và hạnh phúc. Em biết không từ ngày em xuất hiện em đã là một phần không thể thiếu trong cuộc sống của anh. Anh sẽ cố gắng thật nhiều để có thể mang đến cho thật nhiều điều hạnh phúc để em chỉ mãi cười thật tươi mãi hạnh phúc. Anh yêu em nhiều lắm cô gái của anh. Mình sẽ luôn bên cạnh nhau nhé công chúa của anh"
        </p>
        <div class="signature">
            Yêu em, <br>
            Đậu của em❤️
        </div>
    </div>

    <script>
        const initialHeart = document.getElementById('initial-heart');
        const messageContainer = document.querySelector('.container');
        const body = document.body;
        let heartInterval; 

        // Hàm tạo hiệu ứng PHÁO TIM BÙNG NỔ
        function createBurstEffect(centerX, centerY) {
            const numParticles = 30; // Tăng số lượng tim bắn ra
            const radius = 120; // Bán kính vụ nổ lớn hơn

            for (let i = 0; i < numParticles; i++) {
                const particle = document.createElement('div');
                particle.classList.add('burst-particle');
                
                // Vị trí ban đầu
                particle.style.left = `${centerX}px`;
                particle.style.top = `${centerY}px`;

                // Vị trí kết thúc ngẫu nhiên
                const angle = (i / numParticles) * Math.PI * 2;
                const endX = Math.cos(angle) * radius * (Math.random() * 0.5 + 1); 
                const endY = Math.sin(angle) * radius * (Math.random() * 0.5 + 1);

                // Gán biến CSS cho keyframes
                particle.style.setProperty('--endX', `${endX}px`);
                particle.style.setProperty('--endY', `${endY}px`);

                body.appendChild(particle);

                // Xóa particle sau khi animation kết thúc
                setTimeout(() => {
                    particle.remove();
                }, 800); 
            }
        }

        initialHeart.addEventListener('click', (e) => {
            // Lấy vị trí trung tâm của trái tim
            const rect = initialHeart.getBoundingClientRect();
            const centerX = rect.left + rect.width / 2;
            const centerY = rect.top + rect.height / 2;

            // 1. Tạo hiệu ứng PHÁO TIM BÙNG NỔ
            createBurstEffect(centerX, centerY);

            // 2. Ẩn trái tim ban đầu
            initialHeart.classList.add('hide');

            // 3. Bắt đầu hiệu ứng trái tim rơi
            setTimeout(() => {
                startHeartRain(); 
            }, 600); // Sau khi hiệu ứng bùng nổ gần xong (0.6s)

            // 4. Hiển thị lời nhắn
            setTimeout(() => {
                messageContainer.classList.add('show');
            }, 2500); // Thời gian dài hơn để hiệu ứng bùng nổ + trái tim rơi có đủ đất diễn
        });


        // Hàm tạo và điều khiển trái tim rơi 
        function createHeartParticle() {
            const heart = document.createElement('div');
            heart.classList.add('heart-particle'); 

            const size = Math.random() * 20 + 10; 
            heart.style.width = size + 'px';
            heart.style.height = size + 'px';
            heart.style.top = Math.random() * -100 + 'px'; 
            heart.style.left = Math.random() * 100 + 'vw';

            const duration = Math.random() * 10 + 8;
            heart.style.animation = `fall ${duration}s linear infinite, 
                                     sway ${Math.random() * 5 + 5}s ease-in-out infinite alternate, 
                                     pulse 1.5s ease-in-out infinite`;
            heart.style.animationDelay = Math.random() * 8 + 's';
            
            body.appendChild(heart);

            setTimeout(() => {
                heart.remove();
            }, duration * 1000);
        }

        function startHeartRain() {
            for (let i = 0; i < 30; i++) {
                createHeartParticle();
            }
            heartInterval = setInterval(createHeartParticle, 150); 
        }

        window.addEventListener('beforeunload', () => {
            clearInterval(heartInterval);
        });

    </script>
</body>
</html>